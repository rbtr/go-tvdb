// Code generated by go-swagger; DO NOT EDIT.

package updates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetUpdatedQueryParamsReader is a Reader for the GetUpdatedQueryParams structure.
type GetUpdatedQueryParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpdatedQueryParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpdatedQueryParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUpdatedQueryParamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUpdatedQueryParamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUpdatedQueryParamsOK creates a GetUpdatedQueryParamsOK with default headers values
func NewGetUpdatedQueryParamsOK() *GetUpdatedQueryParamsOK {
	return &GetUpdatedQueryParamsOK{}
}

/*GetUpdatedQueryParamsOK handles this case with default header values.

An array of Update objects that match the given timeframe.
*/
type GetUpdatedQueryParamsOK struct {
	Payload *models.UpdateDataQueryParams
}

func (o *GetUpdatedQueryParamsOK) Error() string {
	return fmt.Sprintf("[GET /updated/query/params][%d] getUpdatedQueryParamsOK  %+v", 200, o.Payload)
}

func (o *GetUpdatedQueryParamsOK) GetPayload() *models.UpdateDataQueryParams {
	return o.Payload
}

func (o *GetUpdatedQueryParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UpdateDataQueryParams)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpdatedQueryParamsUnauthorized creates a GetUpdatedQueryParamsUnauthorized with default headers values
func NewGetUpdatedQueryParamsUnauthorized() *GetUpdatedQueryParamsUnauthorized {
	return &GetUpdatedQueryParamsUnauthorized{}
}

/*GetUpdatedQueryParamsUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetUpdatedQueryParamsUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetUpdatedQueryParamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /updated/query/params][%d] getUpdatedQueryParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUpdatedQueryParamsUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetUpdatedQueryParamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpdatedQueryParamsNotFound creates a GetUpdatedQueryParamsNotFound with default headers values
func NewGetUpdatedQueryParamsNotFound() *GetUpdatedQueryParamsNotFound {
	return &GetUpdatedQueryParamsNotFound{}
}

/*GetUpdatedQueryParamsNotFound handles this case with default header values.

Returned if no records exist for the given timespan
*/
type GetUpdatedQueryParamsNotFound struct {
	Payload *models.NotFound
}

func (o *GetUpdatedQueryParamsNotFound) Error() string {
	return fmt.Sprintf("[GET /updated/query/params][%d] getUpdatedQueryParamsNotFound  %+v", 404, o.Payload)
}

func (o *GetUpdatedQueryParamsNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetUpdatedQueryParamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
