// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetUserRatingsQueryReader is a Reader for the GetUserRatingsQuery structure.
type GetUserRatingsQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRatingsQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRatingsQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserRatingsQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserRatingsQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserRatingsQueryOK creates a GetUserRatingsQueryOK with default headers values
func NewGetUserRatingsQueryOK() *GetUserRatingsQueryOK {
	return &GetUserRatingsQueryOK{}
}

/*GetUserRatingsQueryOK handles this case with default header values.

List of user ratings that match the given query.
*/
type GetUserRatingsQueryOK struct {
	Payload *models.UserRatingsData
}

func (o *GetUserRatingsQueryOK) Error() string {
	return fmt.Sprintf("[GET /user/ratings/query][%d] getUserRatingsQueryOK  %+v", 200, o.Payload)
}

func (o *GetUserRatingsQueryOK) GetPayload() *models.UserRatingsData {
	return o.Payload
}

func (o *GetUserRatingsQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserRatingsData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRatingsQueryUnauthorized creates a GetUserRatingsQueryUnauthorized with default headers values
func NewGetUserRatingsQueryUnauthorized() *GetUserRatingsQueryUnauthorized {
	return &GetUserRatingsQueryUnauthorized{}
}

/*GetUserRatingsQueryUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetUserRatingsQueryUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetUserRatingsQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/ratings/query][%d] getUserRatingsQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserRatingsQueryUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetUserRatingsQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRatingsQueryNotFound creates a GetUserRatingsQueryNotFound with default headers values
func NewGetUserRatingsQueryNotFound() *GetUserRatingsQueryNotFound {
	return &GetUserRatingsQueryNotFound{}
}

/*GetUserRatingsQueryNotFound handles this case with default header values.

Returned if no information exists for the current user
*/
type GetUserRatingsQueryNotFound struct {
	Payload *models.NotFound
}

func (o *GetUserRatingsQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /user/ratings/query][%d] getUserRatingsQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetUserRatingsQueryNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetUserRatingsQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
