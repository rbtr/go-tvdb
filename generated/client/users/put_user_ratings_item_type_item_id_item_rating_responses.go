// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// PutUserRatingsItemTypeItemIDItemRatingReader is a Reader for the PutUserRatingsItemTypeItemIDItemRating structure.
type PutUserRatingsItemTypeItemIDItemRatingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutUserRatingsItemTypeItemIDItemRatingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutUserRatingsItemTypeItemIDItemRatingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPutUserRatingsItemTypeItemIDItemRatingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutUserRatingsItemTypeItemIDItemRatingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutUserRatingsItemTypeItemIDItemRatingOK creates a PutUserRatingsItemTypeItemIDItemRatingOK with default headers values
func NewPutUserRatingsItemTypeItemIDItemRatingOK() *PutUserRatingsItemTypeItemIDItemRatingOK {
	return &PutUserRatingsItemTypeItemIDItemRatingOK{}
}

/*PutUserRatingsItemTypeItemIDItemRatingOK handles this case with default header values.

Update OK if the update was successful
*/
type PutUserRatingsItemTypeItemIDItemRatingOK struct {
	Payload *models.UserRatingsDataNoLinks
}

func (o *PutUserRatingsItemTypeItemIDItemRatingOK) Error() string {
	return fmt.Sprintf("[PUT /user/ratings/{itemType}/{itemId}/{itemRating}][%d] putUserRatingsItemTypeItemIdItemRatingOK  %+v", 200, o.Payload)
}

func (o *PutUserRatingsItemTypeItemIDItemRatingOK) GetPayload() *models.UserRatingsDataNoLinks {
	return o.Payload
}

func (o *PutUserRatingsItemTypeItemIDItemRatingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserRatingsDataNoLinks)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRatingsItemTypeItemIDItemRatingUnauthorized creates a PutUserRatingsItemTypeItemIDItemRatingUnauthorized with default headers values
func NewPutUserRatingsItemTypeItemIDItemRatingUnauthorized() *PutUserRatingsItemTypeItemIDItemRatingUnauthorized {
	return &PutUserRatingsItemTypeItemIDItemRatingUnauthorized{}
}

/*PutUserRatingsItemTypeItemIDItemRatingUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type PutUserRatingsItemTypeItemIDItemRatingUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *PutUserRatingsItemTypeItemIDItemRatingUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user/ratings/{itemType}/{itemId}/{itemRating}][%d] putUserRatingsItemTypeItemIdItemRatingUnauthorized  %+v", 401, o.Payload)
}

func (o *PutUserRatingsItemTypeItemIDItemRatingUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *PutUserRatingsItemTypeItemIDItemRatingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutUserRatingsItemTypeItemIDItemRatingNotFound creates a PutUserRatingsItemTypeItemIDItemRatingNotFound with default headers values
func NewPutUserRatingsItemTypeItemIDItemRatingNotFound() *PutUserRatingsItemTypeItemIDItemRatingNotFound {
	return &PutUserRatingsItemTypeItemIDItemRatingNotFound{}
}

/*PutUserRatingsItemTypeItemIDItemRatingNotFound handles this case with default header values.

Returned if no rating is found that matches your given parameters
*/
type PutUserRatingsItemTypeItemIDItemRatingNotFound struct {
	Payload *models.NotFound
}

func (o *PutUserRatingsItemTypeItemIDItemRatingNotFound) Error() string {
	return fmt.Sprintf("[PUT /user/ratings/{itemType}/{itemId}/{itemRating}][%d] putUserRatingsItemTypeItemIdItemRatingNotFound  %+v", 404, o.Payload)
}

func (o *PutUserRatingsItemTypeItemIDItemRatingNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *PutUserRatingsItemTypeItemIDItemRatingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
