// Code generated by go-swagger; DO NOT EDIT.

package languages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetLanguagesReader is a Reader for the GetLanguages structure.
type GetLanguagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLanguagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLanguagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLanguagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLanguagesOK creates a GetLanguagesOK with default headers values
func NewGetLanguagesOK() *GetLanguagesOK {
	return &GetLanguagesOK{}
}

/*GetLanguagesOK handles this case with default header values.

An array of language objects.
*/
type GetLanguagesOK struct {
	Payload *models.LanguageData
}

func (o *GetLanguagesOK) Error() string {
	return fmt.Sprintf("[GET /languages][%d] getLanguagesOK  %+v", 200, o.Payload)
}

func (o *GetLanguagesOK) GetPayload() *models.LanguageData {
	return o.Payload
}

func (o *GetLanguagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LanguageData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLanguagesUnauthorized creates a GetLanguagesUnauthorized with default headers values
func NewGetLanguagesUnauthorized() *GetLanguagesUnauthorized {
	return &GetLanguagesUnauthorized{}
}

/*GetLanguagesUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetLanguagesUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetLanguagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /languages][%d] getLanguagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLanguagesUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetLanguagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
