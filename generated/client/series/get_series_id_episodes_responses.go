// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetSeriesIDEpisodesReader is a Reader for the GetSeriesIDEpisodes structure.
type GetSeriesIDEpisodesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSeriesIDEpisodesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSeriesIDEpisodesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSeriesIDEpisodesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSeriesIDEpisodesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSeriesIDEpisodesOK creates a GetSeriesIDEpisodesOK with default headers values
func NewGetSeriesIDEpisodesOK() *GetSeriesIDEpisodesOK {
	return &GetSeriesIDEpisodesOK{}
}

/*GetSeriesIDEpisodesOK handles this case with default header values.

An array of episode objects for the given series id.
*/
type GetSeriesIDEpisodesOK struct {
	Payload *models.SeriesEpisodes
}

func (o *GetSeriesIDEpisodesOK) Error() string {
	return fmt.Sprintf("[GET /series/{id}/episodes][%d] getSeriesIdEpisodesOK  %+v", 200, o.Payload)
}

func (o *GetSeriesIDEpisodesOK) GetPayload() *models.SeriesEpisodes {
	return o.Payload
}

func (o *GetSeriesIDEpisodesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SeriesEpisodes)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDEpisodesUnauthorized creates a GetSeriesIDEpisodesUnauthorized with default headers values
func NewGetSeriesIDEpisodesUnauthorized() *GetSeriesIDEpisodesUnauthorized {
	return &GetSeriesIDEpisodesUnauthorized{}
}

/*GetSeriesIDEpisodesUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetSeriesIDEpisodesUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetSeriesIDEpisodesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /series/{id}/episodes][%d] getSeriesIdEpisodesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSeriesIDEpisodesUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetSeriesIDEpisodesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDEpisodesNotFound creates a GetSeriesIDEpisodesNotFound with default headers values
func NewGetSeriesIDEpisodesNotFound() *GetSeriesIDEpisodesNotFound {
	return &GetSeriesIDEpisodesNotFound{}
}

/*GetSeriesIDEpisodesNotFound handles this case with default header values.

Returned if the given series ID does not exist
*/
type GetSeriesIDEpisodesNotFound struct {
	Payload *models.NotFound
}

func (o *GetSeriesIDEpisodesNotFound) Error() string {
	return fmt.Sprintf("[GET /series/{id}/episodes][%d] getSeriesIdEpisodesNotFound  %+v", 404, o.Payload)
}

func (o *GetSeriesIDEpisodesNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetSeriesIDEpisodesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
