// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetSeriesIDImagesQueryParamsReader is a Reader for the GetSeriesIDImagesQueryParams structure.
type GetSeriesIDImagesQueryParamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSeriesIDImagesQueryParamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSeriesIDImagesQueryParamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSeriesIDImagesQueryParamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSeriesIDImagesQueryParamsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSeriesIDImagesQueryParamsOK creates a GetSeriesIDImagesQueryParamsOK with default headers values
func NewGetSeriesIDImagesQueryParamsOK() *GetSeriesIDImagesQueryParamsOK {
	return &GetSeriesIDImagesQueryParamsOK{}
}

/*GetSeriesIDImagesQueryParamsOK handles this case with default header values.

An array of query keys as strings
*/
type GetSeriesIDImagesQueryParamsOK struct {
	Payload *models.SeriesImagesQueryParams
}

func (o *GetSeriesIDImagesQueryParamsOK) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query/params][%d] getSeriesIdImagesQueryParamsOK  %+v", 200, o.Payload)
}

func (o *GetSeriesIDImagesQueryParamsOK) GetPayload() *models.SeriesImagesQueryParams {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryParamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SeriesImagesQueryParams)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDImagesQueryParamsUnauthorized creates a GetSeriesIDImagesQueryParamsUnauthorized with default headers values
func NewGetSeriesIDImagesQueryParamsUnauthorized() *GetSeriesIDImagesQueryParamsUnauthorized {
	return &GetSeriesIDImagesQueryParamsUnauthorized{}
}

/*GetSeriesIDImagesQueryParamsUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetSeriesIDImagesQueryParamsUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetSeriesIDImagesQueryParamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query/params][%d] getSeriesIdImagesQueryParamsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSeriesIDImagesQueryParamsUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryParamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDImagesQueryParamsNotFound creates a GetSeriesIDImagesQueryParamsNotFound with default headers values
func NewGetSeriesIDImagesQueryParamsNotFound() *GetSeriesIDImagesQueryParamsNotFound {
	return &GetSeriesIDImagesQueryParamsNotFound{}
}

/*GetSeriesIDImagesQueryParamsNotFound handles this case with default header values.

Returned if the given series ID does not exist or the query returns no results.
*/
type GetSeriesIDImagesQueryParamsNotFound struct {
	Payload *models.NotFound
}

func (o *GetSeriesIDImagesQueryParamsNotFound) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query/params][%d] getSeriesIdImagesQueryParamsNotFound  %+v", 404, o.Payload)
}

func (o *GetSeriesIDImagesQueryParamsNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryParamsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
