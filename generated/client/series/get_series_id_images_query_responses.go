// Code generated by go-swagger; DO NOT EDIT.

package series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetSeriesIDImagesQueryReader is a Reader for the GetSeriesIDImagesQuery structure.
type GetSeriesIDImagesQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSeriesIDImagesQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSeriesIDImagesQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSeriesIDImagesQueryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSeriesIDImagesQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSeriesIDImagesQueryOK creates a GetSeriesIDImagesQueryOK with default headers values
func NewGetSeriesIDImagesQueryOK() *GetSeriesIDImagesQueryOK {
	return &GetSeriesIDImagesQueryOK{}
}

/*GetSeriesIDImagesQueryOK handles this case with default header values.

An array of basic Episode results that matched the query
*/
type GetSeriesIDImagesQueryOK struct {
	Payload *models.SeriesImageQueryResults
}

func (o *GetSeriesIDImagesQueryOK) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query][%d] getSeriesIdImagesQueryOK  %+v", 200, o.Payload)
}

func (o *GetSeriesIDImagesQueryOK) GetPayload() *models.SeriesImageQueryResults {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SeriesImageQueryResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDImagesQueryUnauthorized creates a GetSeriesIDImagesQueryUnauthorized with default headers values
func NewGetSeriesIDImagesQueryUnauthorized() *GetSeriesIDImagesQueryUnauthorized {
	return &GetSeriesIDImagesQueryUnauthorized{}
}

/*GetSeriesIDImagesQueryUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetSeriesIDImagesQueryUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetSeriesIDImagesQueryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query][%d] getSeriesIdImagesQueryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSeriesIDImagesQueryUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSeriesIDImagesQueryNotFound creates a GetSeriesIDImagesQueryNotFound with default headers values
func NewGetSeriesIDImagesQueryNotFound() *GetSeriesIDImagesQueryNotFound {
	return &GetSeriesIDImagesQueryNotFound{}
}

/*GetSeriesIDImagesQueryNotFound handles this case with default header values.

Returned if the given series ID does not exist or the query returns no results.
*/
type GetSeriesIDImagesQueryNotFound struct {
	Payload *models.NotFound
}

func (o *GetSeriesIDImagesQueryNotFound) Error() string {
	return fmt.Sprintf("[GET /series/{id}/images/query][%d] getSeriesIdImagesQueryNotFound  %+v", 404, o.Payload)
}

func (o *GetSeriesIDImagesQueryNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetSeriesIDImagesQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
