// Code generated by go-swagger; DO NOT EDIT.

package episodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/rbtr/go-tvdb/generated/models"
)

// GetEpisodesIDReader is a Reader for the GetEpisodesID structure.
type GetEpisodesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEpisodesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEpisodesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEpisodesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEpisodesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEpisodesIDOK creates a GetEpisodesIDOK with default headers values
func NewGetEpisodesIDOK() *GetEpisodesIDOK {
	return &GetEpisodesIDOK{}
}

/*GetEpisodesIDOK handles this case with default header values.

An array of query keys as strings
*/
type GetEpisodesIDOK struct {
	Payload *models.EpisodeRecordData
}

func (o *GetEpisodesIDOK) Error() string {
	return fmt.Sprintf("[GET /episodes/{id}][%d] getEpisodesIdOK  %+v", 200, o.Payload)
}

func (o *GetEpisodesIDOK) GetPayload() *models.EpisodeRecordData {
	return o.Payload
}

func (o *GetEpisodesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EpisodeRecordData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodesIDUnauthorized creates a GetEpisodesIDUnauthorized with default headers values
func NewGetEpisodesIDUnauthorized() *GetEpisodesIDUnauthorized {
	return &GetEpisodesIDUnauthorized{}
}

/*GetEpisodesIDUnauthorized handles this case with default header values.

Returned if your JWT token is missing or expired
*/
type GetEpisodesIDUnauthorized struct {
	Payload *models.NotAuthorized
}

func (o *GetEpisodesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /episodes/{id}][%d] getEpisodesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEpisodesIDUnauthorized) GetPayload() *models.NotAuthorized {
	return o.Payload
}

func (o *GetEpisodesIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotAuthorized)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEpisodesIDNotFound creates a GetEpisodesIDNotFound with default headers values
func NewGetEpisodesIDNotFound() *GetEpisodesIDNotFound {
	return &GetEpisodesIDNotFound{}
}

/*GetEpisodesIDNotFound handles this case with default header values.

Returned if the given episode ID does not exist.
*/
type GetEpisodesIDNotFound struct {
	Payload *models.NotFound
}

func (o *GetEpisodesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /episodes/{id}][%d] getEpisodesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetEpisodesIDNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetEpisodesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
