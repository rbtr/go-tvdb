// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SeriesImageQueryResult series image query result
// swagger:model SeriesImageQueryResult
type SeriesImageQueryResult struct {

	// file name
	FileName string `json:"fileName,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// key type
	KeyType string `json:"keyType,omitempty"`

	// language Id
	LanguageID int64 `json:"languageId,omitempty"`

	// ratings info
	RatingsInfo *SeriesImageQueryResultRatingsInfo `json:"ratingsInfo,omitempty"`

	// resolution
	Resolution string `json:"resolution,omitempty"`

	// sub key
	SubKey string `json:"subKey,omitempty"`

	// thumbnail
	Thumbnail string `json:"thumbnail,omitempty"`
}

// Validate validates this series image query result
func (m *SeriesImageQueryResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRatingsInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SeriesImageQueryResult) validateRatingsInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.RatingsInfo) { // not required
		return nil
	}

	if m.RatingsInfo != nil {
		if err := m.RatingsInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ratingsInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SeriesImageQueryResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SeriesImageQueryResult) UnmarshalBinary(b []byte) error {
	var res SeriesImageQueryResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// SeriesImageQueryResultRatingsInfo series image query result ratings info
// swagger:model SeriesImageQueryResultRatingsInfo
type SeriesImageQueryResultRatingsInfo struct {

	// Average rating for the given record.
	Average float64 `json:"average,omitempty"`

	// Number of ratings for the given record.
	Count int64 `json:"count,omitempty"`
}

// Validate validates this series image query result ratings info
func (m *SeriesImageQueryResultRatingsInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SeriesImageQueryResultRatingsInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SeriesImageQueryResultRatingsInfo) UnmarshalBinary(b []byte) error {
	var res SeriesImageQueryResultRatingsInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
